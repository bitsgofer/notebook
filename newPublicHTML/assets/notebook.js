var _self=(typeof window!=='undefined')?window:((typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope)?self:{});var Prism=(function(){var lang=/\blang(?:uage)?-([\w-]+)\b/i;var uniqueId=0;var _=_self.Prism={manual:_self.Prism&&_self.Prism.manual,disableWorkerMessageHandler:_self.Prism&&_self.Prism.disableWorkerMessageHandler,util:{encode:function(tokens){if(tokens instanceof Token){return new Token(tokens.type,_.util.encode(tokens.content),tokens.alias);}else if(_.util.type(tokens)==='Array'){return tokens.map(_.util.encode);}else{return tokens.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/\u00a0/g,' ');}},type:function(o){return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];},objId:function(obj){if(!obj['__id']){Object.defineProperty(obj,'__id',{value:++uniqueId});}
return obj['__id'];},clone:function(o,visited){var type=_.util.type(o);visited=visited||{};switch(type){case 'Object':if(visited[_.util.objId(o)]){return visited[_.util.objId(o)];}
var clone={};visited[_.util.objId(o)]=clone;for(var key in o){if(o.hasOwnProperty(key)){clone[key]=_.util.clone(o[key],visited);}}
return clone;case 'Array':if(visited[_.util.objId(o)]){return visited[_.util.objId(o)];}
var clone=[];visited[_.util.objId(o)]=clone;o.forEach(function(v,i){clone[i]=_.util.clone(v,visited);});return clone;}
return o;}},languages:{extend:function(id,redef){var lang=_.util.clone(_.languages[id]);for(var key in redef){lang[key]=redef[key];}
return lang;},insertBefore:function(inside,before,insert,root){root=root||_.languages;var grammar=root[inside];if(arguments.length==2){insert=arguments[1];for(var newToken in insert){if(insert.hasOwnProperty(newToken)){grammar[newToken]=insert[newToken];}}
return grammar;}
var ret={};for(var token in grammar){if(grammar.hasOwnProperty(token)){if(token==before){for(var newToken in insert){if(insert.hasOwnProperty(newToken)){ret[newToken]=insert[newToken];}}}
ret[token]=grammar[token];}}
_.languages.DFS(_.languages,function(key,value){if(value===root[inside]&&key!=inside){this[key]=ret;}});return root[inside]=ret;},DFS:function(o,callback,type,visited){visited=visited||{};for(var i in o){if(o.hasOwnProperty(i)){callback.call(o,i,o[i],type||i);if(_.util.type(o[i])==='Object'&&!visited[_.util.objId(o[i])]){visited[_.util.objId(o[i])]=true;_.languages.DFS(o[i],callback,null,visited);}
else if(_.util.type(o[i])==='Array'&&!visited[_.util.objId(o[i])]){visited[_.util.objId(o[i])]=true;_.languages.DFS(o[i],callback,i,visited);}}}}},plugins:{},highlightAll:function(async,callback){_.highlightAllUnder(document,async,callback);},highlightAllUnder:function(container,async,callback){var env={callback:callback,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};_.hooks.run("before-highlightall",env);var elements=env.elements||container.querySelectorAll(env.selector);for(var i=0,element;element=elements[i++];){_.highlightElement(element,async===true,env.callback);}},highlightElement:function(element,async,callback){var language,grammar,parent=element;while(parent&&!lang.test(parent.className)){parent=parent.parentNode;}
if(parent){language=(parent.className.match(lang)||[,''])[1].toLowerCase();grammar=_.languages[language];}
element.className=element.className.replace(lang,'').replace(/\s+/g,' ')+' language-'+language;if(element.parentNode){parent=element.parentNode;if(/pre/i.test(parent.nodeName)){parent.className=parent.className.replace(lang,'').replace(/\s+/g,' ')+' language-'+language;}}
var code=element.textContent;var env={element:element,language:language,grammar:grammar,code:code};_.hooks.run('before-sanity-check',env);if(!env.code||!env.grammar){if(env.code){_.hooks.run('before-highlight',env);env.element.textContent=env.code;_.hooks.run('after-highlight',env);}
_.hooks.run('complete',env);return;}
_.hooks.run('before-highlight',env);if(async&&_self.Worker){var worker=new Worker(_.filename);worker.onmessage=function(evt){env.highlightedCode=evt.data;_.hooks.run('before-insert',env);env.element.innerHTML=env.highlightedCode;callback&&callback.call(env.element);_.hooks.run('after-highlight',env);_.hooks.run('complete',env);};worker.postMessage(JSON.stringify({language:env.language,code:env.code,immediateClose:true}));}
else{env.highlightedCode=_.highlight(env.code,env.grammar,env.language);_.hooks.run('before-insert',env);env.element.innerHTML=env.highlightedCode;callback&&callback.call(element);_.hooks.run('after-highlight',env);_.hooks.run('complete',env);}},highlight:function(text,grammar,language){var env={code:text,grammar:grammar,language:language};_.hooks.run('before-tokenize',env);env.tokens=_.tokenize(env.code,env.grammar);_.hooks.run('after-tokenize',env);return Token.stringify(_.util.encode(env.tokens),env.language);},matchGrammar:function(text,strarr,grammar,index,startPos,oneshot,target){var Token=_.Token;for(var token in grammar){if(!grammar.hasOwnProperty(token)||!grammar[token]){continue;}
if(token==target){return;}
var patterns=grammar[token];patterns=(_.util.type(patterns)==="Array")?patterns:[patterns];for(var j=0;j<patterns.length;++j){var pattern=patterns[j],inside=pattern.inside,lookbehind=!!pattern.lookbehind,greedy=!!pattern.greedy,lookbehindLength=0,alias=pattern.alias;if(greedy&&!pattern.pattern.global){var flags=pattern.pattern.toString().match(/[imuy]*$/)[0];pattern.pattern=RegExp(pattern.pattern.source,flags+"g");}
pattern=pattern.pattern||pattern;for(var i=index,pos=startPos;i<strarr.length;pos+=strarr[i].length,++i){var str=strarr[i];if(strarr.length>text.length){return;}
if(str instanceof Token){continue;}
if(greedy&&i!=strarr.length-1){pattern.lastIndex=pos;var match=pattern.exec(text);if(!match){break;}
var from=match.index+(lookbehind?match[1].length:0),to=match.index+match[0].length,k=i,p=pos;for(var len=strarr.length;k<len&&(p<to||(!strarr[k].type&&!strarr[k-1].greedy));++k){p+=strarr[k].length;if(from>=p){++i;pos=p;}}
if(strarr[i]instanceof Token){continue;}
delNum=k-i;str=text.slice(pos,p);match.index-=pos;}else{pattern.lastIndex=0;var match=pattern.exec(str),delNum=1;}
if(!match){if(oneshot){break;}
continue;}
if(lookbehind){lookbehindLength=match[1]?match[1].length:0;}
var from=match.index+lookbehindLength,match=match[0].slice(lookbehindLength),to=from+match.length,before=str.slice(0,from),after=str.slice(to);var args=[i,delNum];if(before){++i;pos+=before.length;args.push(before);}
var wrapped=new Token(token,inside?_.tokenize(match,inside):match,alias,match,greedy);args.push(wrapped);if(after){args.push(after);}
Array.prototype.splice.apply(strarr,args);if(delNum!=1)
_.matchGrammar(text,strarr,grammar,i,pos,true,token);if(oneshot)
break;}}}},tokenize:function(text,grammar,language){var strarr=[text];var rest=grammar.rest;if(rest){for(var token in rest){grammar[token]=rest[token];}
delete grammar.rest;}
_.matchGrammar(text,strarr,grammar,0,0,false);return strarr;},hooks:{all:{},add:function(name,callback){var hooks=_.hooks.all;hooks[name]=hooks[name]||[];hooks[name].push(callback);},run:function(name,env){var callbacks=_.hooks.all[name];if(!callbacks||!callbacks.length){return;}
for(var i=0,callback;callback=callbacks[i++];){callback(env);}}}};var Token=_.Token=function(type,content,alias,matchedStr,greedy){this.type=type;this.content=content;this.alias=alias;this.length=(matchedStr||"").length|0;this.greedy=!!greedy;};Token.stringify=function(o,language,parent){if(typeof o=='string'){return o;}
if(_.util.type(o)==='Array'){return o.map(function(element){return Token.stringify(element,language,o);}).join('');}
var env={type:o.type,content:Token.stringify(o.content,language,parent),tag:'span',classes:['token',o.type],attributes:{},language:language,parent:parent};if(o.alias){var aliases=_.util.type(o.alias)==='Array'?o.alias:[o.alias];Array.prototype.push.apply(env.classes,aliases);}
_.hooks.run('wrap',env);var attributes=Object.keys(env.attributes).map(function(name){return name+'="'+(env.attributes[name]||'').replace(/"/g,'&quot;')+'"';}).join(' ');return '<'+env.tag+' class="'+env.classes.join(' ')+'"'+(attributes?' '+attributes:'')+'>'+env.content+'</'+env.tag+'>';};if(!_self.document){if(!_self.addEventListener){return _self.Prism;}
if(!_.disableWorkerMessageHandler){_self.addEventListener('message',function(evt){var message=JSON.parse(evt.data),lang=message.language,code=message.code,immediateClose=message.immediateClose;_self.postMessage(_.highlight(code,_.languages[lang],lang));if(immediateClose){_self.close();}},false);}
return _self.Prism;}
var script=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();if(script){_.filename=script.src;if(!_.manual&&!script.hasAttribute('data-manual')){if(document.readyState!=="loading"){if(window.requestAnimationFrame){window.requestAnimationFrame(_.highlightAll);}else{window.setTimeout(_.highlightAll,16);}}
else{document.addEventListener('DOMContentLoaded',_.highlightAll);}}}
return _self.Prism;})();if(typeof module!=='undefined'&&module.exports){module.exports=Prism;}
if(typeof global!=='undefined'){global.Prism=Prism;};Prism.languages.markup={'comment':/<!--[\s\S]*?-->/,'prolog':/<\?[\s\S]+?\?>/,'doctype':/<!DOCTYPE[\s\S]+?>/i,'cdata':/<!\[CDATA\[[\s\S]*?]]>/i,'tag':{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,greedy:true,inside:{'tag':{pattern:/^<\/?[^\s>\/]+/i,inside:{'punctuation':/^<\/?/,'namespace':/^[^\s>\/:]+:/}},'attr-value':{pattern:/=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,inside:{'punctuation':[/^=/,{pattern:/(^|[^\\])["']/,lookbehind:true}]}},'punctuation':/\/?>/,'attr-name':{pattern:/[^\s>\/]+/,inside:{'namespace':/^[^\s>\/:]+:/}}}},'entity':/&#?[\da-z]{1,8};/i};Prism.languages.markup['tag'].inside['attr-value'].inside['entity']=Prism.languages.markup['entity'];Prism.hooks.add('wrap',function(env){if(env.type==='entity'){env.attributes['title']=env.content.replace(/&amp;/,'&');}});Prism.languages.xml=Prism.languages.markup;Prism.languages.html=Prism.languages.markup;Prism.languages.mathml=Prism.languages.markup;Prism.languages.svg=Prism.languages.markup;Prism.languages.clike={'comment':[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:true},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:true,greedy:true}],'string':{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:true},'class-name':{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:true,inside:{punctuation:/[.\\]/}},'keyword':/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,'boolean':/\b(?:true|false)\b/,'function':/[a-z0-9_]+(?=\()/i,'number':/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,'operator':/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,'punctuation':/[{}[\];(),.:]/};Prism.languages.ada={'comment':/--.*/,'string':/"(?:""|[^"\r\f\n])*"/i,'number':[{pattern:/\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i},{pattern:/\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i}],'attr-name':/\b'\w+/i,'keyword':/\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,'boolean':/\b(?:true|false)\b/i,'operator':/<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,'punctuation':/\.\.?|[,;():]/,'char':/'.'/,'variable':/\b[a-z](?:[_a-z\d])*\b/i};Prism.languages.c=Prism.languages.extend('clike',{'keyword':/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,'operator':/-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/]/,'number':/(?:\b0x[\da-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i});Prism.languages.insertBefore('c','string',{'macro':{pattern:/(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:true,alias:'property',inside:{'string':{pattern:/(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,lookbehind:true},'directive':{pattern:/(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,lookbehind:true,alias:'keyword'}}},'constant':/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/});delete Prism.languages.c['class-name'];delete Prism.languages.c['boolean'];(function(Prism){var attributes={pattern:/(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\]\\]|\\.)*\]|[^\]\\]|\\.)*\]/m,lookbehind:true,inside:{'quoted':{pattern:/([$`])(?:(?!\1)[^\\]|\\.)*\1/,inside:{'punctuation':/^[$`]|[$`]$/}},'interpreted':{pattern:/'(?:[^'\\]|\\.)*'/,inside:{'punctuation':/^'|'$/}},'string':/"(?:[^"\\]|\\.)*"/,'variable':/\w+(?==)/,'punctuation':/^\[|\]$|,/,'operator':/=/,'attr-value':/(?!^\s+$).+/}};Prism.languages.asciidoc={'comment-block':{pattern:/^(\/{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1/m,alias:'comment'},'table':{pattern:/^\|={3,}(?:(?:\r?\n|\r).*)*?(?:\r?\n|\r)\|={3,}$/m,inside:{'specifiers':{pattern:/(?!\|)(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*])?(?:[<^>](?:\.[<^>])?|\.[<^>])?[a-z]*)(?=\|)/,alias:'attr-value'},'punctuation':{pattern:/(^|[^\\])[|!]=*/,lookbehind:true}}},'passthrough-block':{pattern:/^(\+{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,inside:{'punctuation':/^\++|\++$/}},'literal-block':{pattern:/^(-{4,}|\.{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,inside:{'punctuation':/^(?:-+|\.+)|(?:-+|\.+)$/}},'other-block':{pattern:/^(--|\*{4,}|_{4,}|={4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,inside:{'punctuation':/^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/}},'list-punctuation':{pattern:/(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im,lookbehind:true,alias:'punctuation'},'list-label':{pattern:/(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im,lookbehind:true,alias:'symbol'},'indented-block':{pattern:/((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/,lookbehind:true},'comment':/^\/\/.*/m,'title':{pattern:/^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} +.+|^\.(?![\s.]).*/m,alias:'important',inside:{'punctuation':/^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/}},'attribute-entry':{pattern:/^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m,alias:'tag'},'attributes':attributes,'hr':{pattern:/^'{3,}$/m,alias:'punctuation'},'page-break':{pattern:/^<{3,}$/m,alias:'punctuation'},'admonition':{pattern:/^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,alias:'keyword'},'callout':[{pattern:/(^[ \t]*)<?\d*>/m,lookbehind:true,alias:'symbol'},{pattern:/<\d+>/,alias:'symbol'}],'macro':{pattern:/\b[a-z\d][a-z\d-]*::?(?:(?:\S+)??\[(?:[^\]\\"]|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,inside:{'function':/^[a-z\d-]+(?=:)/,'punctuation':/^::?/,'attributes':{pattern:/(?:\[(?:[^\]\\"]|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,inside:attributes.inside}}},'inline':{pattern:/(^|[^\\])(?:(?:\B\[(?:[^\]\\"]|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?: ['`]|.)+?(?:(?:\r?\n|\r)(?: ['`]|.)+?)*['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"]|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,lookbehind:true,inside:{'attributes':attributes,'url':{pattern:/^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/,inside:{'punctuation':/^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/}},'attribute-ref':{pattern:/^\{.+\}$/,inside:{'variable':{pattern:/(^\{)[a-z\d,+_-]+/,lookbehind:true},'operator':/^[=?!#%@$]|!(?=[:}])/,'punctuation':/^\{|\}$|::?/}},'italic':{pattern:/^(['_])[\s\S]+\1$/,inside:{'punctuation':/^(?:''?|__?)|(?:''?|__?)$/}},'bold':{pattern:/^\*[\s\S]+\*$/,inside:{punctuation:/^\*\*?|\*\*?$/}},'punctuation':/^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/}},'replacement':{pattern:/\((?:C|TM|R)\)/,alias:'builtin'},'entity':/&#?[\da-z]{1,8};/i,'line-continuation':{pattern:/(^| )\+$/m,lookbehind:true,alias:'punctuation'}};attributes.inside['interpreted'].inside.rest={'macro':Prism.languages.asciidoc['macro'],'inline':Prism.languages.asciidoc['inline'],'replacement':Prism.languages.asciidoc['replacement'],'entity':Prism.languages.asciidoc['entity']};Prism.languages.asciidoc['passthrough-block'].inside.rest={'macro':Prism.languages.asciidoc['macro']};Prism.languages.asciidoc['literal-block'].inside.rest={'callout':Prism.languages.asciidoc['callout']};Prism.languages.asciidoc['table'].inside.rest={'comment-block':Prism.languages.asciidoc['comment-block'],'passthrough-block':Prism.languages.asciidoc['passthrough-block'],'literal-block':Prism.languages.asciidoc['literal-block'],'other-block':Prism.languages.asciidoc['other-block'],'list-punctuation':Prism.languages.asciidoc['list-punctuation'],'indented-block':Prism.languages.asciidoc['indented-block'],'comment':Prism.languages.asciidoc['comment'],'title':Prism.languages.asciidoc['title'],'attribute-entry':Prism.languages.asciidoc['attribute-entry'],'attributes':Prism.languages.asciidoc['attributes'],'hr':Prism.languages.asciidoc['hr'],'page-break':Prism.languages.asciidoc['page-break'],'admonition':Prism.languages.asciidoc['admonition'],'list-label':Prism.languages.asciidoc['list-label'],'callout':Prism.languages.asciidoc['callout'],'macro':Prism.languages.asciidoc['macro'],'inline':Prism.languages.asciidoc['inline'],'replacement':Prism.languages.asciidoc['replacement'],'entity':Prism.languages.asciidoc['entity'],'line-continuation':Prism.languages.asciidoc['line-continuation']};Prism.languages.asciidoc['other-block'].inside.rest={'table':Prism.languages.asciidoc['table'],'list-punctuation':Prism.languages.asciidoc['list-punctuation'],'indented-block':Prism.languages.asciidoc['indented-block'],'comment':Prism.languages.asciidoc['comment'],'attribute-entry':Prism.languages.asciidoc['attribute-entry'],'attributes':Prism.languages.asciidoc['attributes'],'hr':Prism.languages.asciidoc['hr'],'page-break':Prism.languages.asciidoc['page-break'],'admonition':Prism.languages.asciidoc['admonition'],'list-label':Prism.languages.asciidoc['list-label'],'macro':Prism.languages.asciidoc['macro'],'inline':Prism.languages.asciidoc['inline'],'replacement':Prism.languages.asciidoc['replacement'],'entity':Prism.languages.asciidoc['entity'],'line-continuation':Prism.languages.asciidoc['line-continuation']};Prism.languages.asciidoc['title'].inside.rest={'macro':Prism.languages.asciidoc['macro'],'inline':Prism.languages.asciidoc['inline'],'replacement':Prism.languages.asciidoc['replacement'],'entity':Prism.languages.asciidoc['entity']};Prism.hooks.add('wrap',function(env){if(env.type==='entity'){env.attributes['title']=env.content.replace(/&amp;/,'&');}});}(Prism));Prism.languages.asm6502={'comment':/;.*/,'directive':{pattern:/\.\w+(?= )/,alias:'keyword'},'string':/(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,'opcode':{pattern:/\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\b/,alias:'property'},'hexnumber':{pattern:/#?\$[\da-f]{2,4}/i,alias:'string'},'binarynumber':{pattern:/#?%[01]+/,alias:'string'},'decimalnumber':{pattern:/#?\d+/,alias:'string'},'register':{pattern:/\b[xya]\b/i,alias:'variable'}};(function(Prism){var insideString={variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:true},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\([^)]+\)|`[^`]+`/,greedy:true,inside:{variable:/^\$\(|^`|\)$|`$/}},/\$(?:[\w#?*!@]+|\{[^}]+\})/i]};Prism.languages.bash={'shebang':{pattern:/^#!\s*\/bin\/bash|^#!\s*\/bin\/sh/,alias:'important'},'comment':{pattern:/(^|[^"{\\])#.*/,lookbehind:true},'string':[{pattern:/((?:^|[^<])<<\s*)["']?(\w+?)["']?\s*\r?\n(?:[\s\S])*?\r?\n\2/,lookbehind:true,greedy:true,inside:insideString},{pattern:/(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/,greedy:true,inside:insideString}],'variable':insideString.variable,'function':{pattern:/(^|[\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\s;|&])/,lookbehind:true},'keyword':{pattern:/(^|[\s;|&])(?:let|:|\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\s;|&])/,lookbehind:true},'boolean':{pattern:/(^|[\s;|&])(?:true|false)(?=$|[\s;|&])/,lookbehind:true},'operator':/&&?|\|\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,'punctuation':/\$?\(\(?|\)\)?|\.\.|[{}[\];]/};var inside=insideString.variable[1].inside;inside.string=Prism.languages.bash.string;inside['function']=Prism.languages.bash['function'];inside.keyword=Prism.languages.bash.keyword;inside['boolean']=Prism.languages.bash['boolean'];inside.operator=Prism.languages.bash.operator;inside.punctuation=Prism.languages.bash.punctuation;Prism.languages.shell=Prism.languages.bash;})(Prism);Prism.languages.cpp=Prism.languages.extend('c',{'keyword':/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,'boolean':/\b(?:true|false)\b/,'operator':/--?|\+\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/});Prism.languages.insertBefore('cpp','keyword',{'class-name':{pattern:/(class\s+)\w+/i,lookbehind:true}});Prism.languages.insertBefore('cpp','string',{'raw-string':{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:'string',greedy:true}});Prism.languages.clojure={comment:/;+.*/,string:/"(?:\\.|[^\\"\r\n])*"/,operator:/(?:::|[:|'])\b[a-z][\w*+!?-]*\b/i,keyword:{pattern:/([^\w+*'?-])(?:def|if|do|let|\.\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\.|new|set!|def\-|defn|defn\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\*|\+|\-|\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\?|union|up|update-proxy|val|vals|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[^\w+*'?-])/,lookbehind:true},boolean:/\b(?:true|false|nil)\b/,number:/\b[0-9A-Fa-f]+\b/,punctuation:/[{}\[\](),]/};(function(Prism){Prism.languages.ruby=Prism.languages.extend('clike',{'comment':[/#.*/,{pattern:/^=begin(?:\r?\n|\r)(?:.*(?:\r?\n|\r))*?=end/m,greedy:true}],'keyword':/\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\b/});var interpolation={pattern:/#\{[^}]+\}/,inside:{'delimiter':{pattern:/^#\{|\}$/,alias:'tag'},rest:Prism.languages.ruby}};Prism.languages.insertBefore('ruby','keyword',{'regex':[{pattern:/%r([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1[gim]{0,3}/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%r\((?:[^()\\]|\\[\s\S])*\)[gim]{0,3}/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%r\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}[gim]{0,3}/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%r\[(?:[^\[\]\\]|\\[\s\S])*\][gim]{0,3}/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%r<(?:[^<>\\]|\\[\s\S])*>[gim]{0,3}/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gim]{0,3}(?=\s*($|[\r\n,.;})]))/,lookbehind:true,greedy:true}],'variable':/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,'symbol':{pattern:/(^|[^:]):[a-zA-Z_]\w*(?:[?!]|\b)/,lookbehind:true}});Prism.languages.insertBefore('ruby','number',{'builtin':/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/,'constant':/\b[A-Z]\w*(?:[?!]|\b)/});Prism.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%[qQiIwWxs]?\((?:[^()\\]|\\[\s\S])*\)/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%[qQiIwWxs]?\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%[qQiIwWxs]?\[(?:[^\[\]\\]|\\[\s\S])*\]/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\]|\\[\s\S])*>/,greedy:true,inside:{'interpolation':interpolation}},{pattern:/("|')(?:#\{[^}]+\}|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:true,inside:{'interpolation':interpolation}}];}(Prism));Prism.languages.d=Prism.languages.extend('clike',{'string':[/\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/,/\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/,/\bq"([_a-zA-Z][_a-zA-Z\d]*)(?:\r?\n|\r)[\s\S]*?(?:\r?\n|\r)\1"/,/\bq"(.)[\s\S]*?\1"/,/'(?:\\'|\\?[^']+)'/,/(["`])(?:\\[\s\S]|(?!\1)[^\\])*\1[cwd]?/],'number':[/\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]*/i,{pattern:/((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]*/i,lookbehind:true}],'keyword':/\$|\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\b/,'operator':/\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/});Prism.languages.d.comment=[/^\s*#!.+/,{pattern:/(^|[^\\])\/\+(?:\/\+[\s\S]*?\+\/|[\s\S])*?\+\//,lookbehind:true}].concat(Prism.languages.d.comment);Prism.languages.insertBefore('d','comment',{'token-string':{pattern:/\bq\{(?:\{[^}]*\}|[^}])*\}/,alias:'string'}});Prism.languages.insertBefore('d','keyword',{'property':/\B@\w*/});Prism.languages.insertBefore('d','function',{'register':{pattern:/\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,alias:'variable'}});Prism.languages.dart=Prism.languages.extend('clike',{'string':[{pattern:/r?("""|''')[\s\S]*?\1/,greedy:true},{pattern:/r?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:true}],'keyword':[/\b(?:async|sync|yield)\*/,/\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\b/],'operator':/\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/});Prism.languages.insertBefore('dart','function',{'metadata':{pattern:/@\w+/,alias:'symbol'}});Prism.languages.diff={'coord':[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d+.*$/m],'deleted':/^[-<].*$/m,'inserted':/^[+>].*$/m,'diff':{'pattern':/^!(?!!).+$/m,'alias':'important'}};Prism.languages.docker={'keyword':{pattern:/(^\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)/mi,lookbehind:true},'string':/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,'comment':/#.*/,'punctuation':/---|\.\.\.|[:[\]{}\-,|>?]/};Prism.languages.dockerfile=Prism.languages.docker;Prism.languages.erlang={'comment':/%.+/,'string':{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:true},'quoted-function':{pattern:/'(?:\\.|[^\\'\r\n])+'(?=\()/,alias:'function'},'quoted-atom':{pattern:/'(?:\\.|[^\\'\r\n])+'/,alias:'atom'},'boolean':/\b(?:true|false)\b/,'keyword':/\b(?:fun|when|case|of|end|if|receive|after|try|catch)\b/,'number':[/\$\\?./,/\d+#[a-z0-9]+/i,/(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i],'function':/\b[a-z][\w@]*(?=\()/,'variable':{pattern:/(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,lookbehind:true},'operator':[/[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:true},{pattern:/(^|[^>])>(?!>)/,lookbehind:true}],'atom':/\b[a-z][\w@]*/,'punctuation':/[()[\]{}:;,.#|]|<<|>>/};Prism.languages.go=Prism.languages.extend('clike',{'keyword':/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,'builtin':/\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/,'boolean':/\b(?:_|iota|nil|true|false)\b/,'operator':/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,'number':/(?:\b0x[a-f\d]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[-+]?\d+)?)i?/i,'string':{pattern:/(["'`])(\\[\s\S]|(?!\1)[^\\])*\1/,greedy:true}});delete Prism.languages.go['class-name'];Prism.languages.graphql={'comment':/#.*/,'string':{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:true},'number':/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,'boolean':/\b(?:true|false)\b/,'variable':/\$[a-z_]\w*/i,'directive':{pattern:/@[a-z_]\w*/i,alias:'function'},'attr-name':/[a-z_]\w*(?=\s*:)/i,'keyword':[{pattern:/(fragment\s+(?!on)[a-z_]\w*\s+|\.{3}\s*)on\b/,lookbehind:true},/\b(?:query|fragment|mutation)\b/],'operator':/!|=|\.{3}/,'punctuation':/[!(){}\[\]:=,]/};Prism.languages.http={'request-line':{pattern:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\s(?:https?:\/\/|\/)\S+\sHTTP\/[0-9.]+/m,inside:{property:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\b/,'attr-name':/:\w+/}},'response-status':{pattern:/^HTTP\/1.[01] \d+.*/m,inside:{property:{pattern:/(^HTTP\/1.[01] )\d+.*/i,lookbehind:true}}},'header-name':{pattern:/^[\w-]+:(?=.)/m,alias:'keyword'}};var httpLanguages={'application/json':Prism.languages.javascript,'application/xml':Prism.languages.markup,'text/xml':Prism.languages.markup,'text/html':Prism.languages.markup};for(var contentType in httpLanguages){if(httpLanguages[contentType]){var options={};options[contentType]={pattern:new RegExp('(content-type:\\s*'+contentType+'[\\w\\W]*?)(?:\\r?\\n|\\r){2}[\\w\\W]*','i'),lookbehind:true,inside:{rest:httpLanguages[contentType]}};Prism.languages.insertBefore('http','header-name',options);}};Prism.languages.hpkp={'directive':{pattern:/\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256="[a-zA-Z\d+=/]+"|(?:max-age|report-uri)=|report-to )/,alias:'keyword'},'safe':{pattern:/\d{7,}/,alias:'selector'},'unsafe':{pattern:/\d{0,6}/,alias:'function'}};Prism.languages.java=Prism.languages.extend('clike',{'keyword':/\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\b/,'number':/\b0b[01]+\b|\b0x[\da-f]*\.?[\da-fp-]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?[df]?/i,'operator':{pattern:/(^|[^.])(?:\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\|[|=]?|\*=?|\/=?|%=?|\^=?|[?:~])/m,lookbehind:true}});Prism.languages.insertBefore('java','function',{'annotation':{alias:'punctuation',pattern:/(^|[^.])@\w+/,lookbehind:true}});Prism.languages.insertBefore('java','class-name',{'generics':{pattern:/<\s*\w+(?:\.\w+)?(?:\s*,\s*\w+(?:\.\w+)?)*>/i,alias:'function',inside:{keyword:Prism.languages.java.keyword,punctuation:/[<>(),.:]/}}});Prism.languages.json={'property':/"(?:\\.|[^\\"\r\n])*"(?=\s*:)/i,'string':{pattern:/"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,greedy:true},'number':/-?\d+\.?\d*([Ee][+-]?\d+)?/,'punctuation':/[{}[\],]/,'operator':/:/g,'boolean':/\b(?:true|false)\b/i,'null':/\bnull\b/i};Prism.languages.jsonp=Prism.languages.json;Prism.languages.julia={'comment':{pattern:/(^|[^\\])#.*/,lookbehind:true},'string':/("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2/,'keyword':/\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\b/,'boolean':/\b(?:true|false)\b/,'number':/(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+\.?\d*|\.\d+)(?:[efp][+-]?\d+)?j?/i,'operator':/[-+*^%÷&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,'punctuation':/[{}[\];(),.:]/};(function(Prism){var funcPattern=/\\(?:[^a-z()[\]]|[a-z*]+)/i,insideEqu={'equation-command':{pattern:funcPattern,alias:'regex'}};Prism.languages.latex={'comment':/%.*/m,'cdata':{pattern:/(\\begin\{((?:verbatim|lstlisting)\*?)\})[\s\S]*?(?=\\end\{\2\})/,lookbehind:true},'equation':[{pattern:/\$(?:\\[\s\S]|[^\\$])*\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,inside:insideEqu,alias:'string'},{pattern:/(\\begin\{((?:equation|math|eqnarray|align|multline|gather)\*?)\})[\s\S]*?(?=\\end\{\2\})/,lookbehind:true,inside:insideEqu,alias:'string'}],'keyword':{pattern:/(\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,lookbehind:true},'url':{pattern:/(\\url\{)[^}]+(?=\})/,lookbehind:true},'headline':{pattern:/(\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\}(?:\[[^\]]+\])?)/,lookbehind:true,alias:'class-name'},'function':{pattern:funcPattern,alias:'selector'},'punctuation':/[[\]{}&]/};})(Prism);Prism.languages.markdown=Prism.languages.extend('markup',{});Prism.languages.insertBefore('markdown','prolog',{'blockquote':{pattern:/^>(?:[\t ]*>)*/m,alias:'punctuation'},'code':[{pattern:/^(?: {4}|\t).+/m,alias:'keyword'},{pattern:/``.+?``|`[^`\n]+`/,alias:'keyword'}],'title':[{pattern:/\w+.*(?:\r?\n|\r)(?:==+|--+)/,alias:'important',inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#+.+/m,lookbehind:true,alias:'important',inside:{punctuation:/^#+|#+$/}}],'hr':{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:true,alias:'punctuation'},'list':{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:true,alias:'punctuation'},'url-reference':{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{'variable':{pattern:/^(!?\[)[^\]]+/,lookbehind:true},'string':/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,'punctuation':/^[\[\]!:]|[<>]/},alias:'url'},'bold':{pattern:/(^|[^\\])(\*\*|__)(?:(?:\r?\n|\r)(?!\r?\n|\r)|.)+?\2/,lookbehind:true,inside:{'punctuation':/^\*\*|^__|\*\*$|__$/}},'italic':{pattern:/(^|[^\\])([*_])(?:(?:\r?\n|\r)(?!\r?\n|\r)|.)+?\2/,lookbehind:true,inside:{'punctuation':/^[*_]|[*_]$/}},'url':{pattern:/!?\[[^\]]+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[[^\]\n]*\])/,inside:{'variable':{pattern:/(!?\[)[^\]]+(?=\]$)/,lookbehind:true},'string':{pattern:/"(?:\\.|[^"\\])*"(?=\)$)/}}}});Prism.languages.markdown['bold'].inside['url']=Prism.languages.markdown['url'];Prism.languages.markdown['italic'].inside['url']=Prism.languages.markdown['url'];Prism.languages.markdown['bold'].inside['italic']=Prism.languages.markdown['italic'];Prism.languages.markdown['italic'].inside['bold']=Prism.languages.markdown['bold'];(function(Prism){function simple_form(name){return new RegExp('(\\()'+name+'(?=[\\s\\)])');}
function primitive(pattern){return new RegExp('([\\s([])'+pattern+'(?=[\\s)])');}
var symbol='[-+*/_~!@$%^=<>{}\\w]+';var marker='&'+symbol;var par='(\\()';var endpar='(?=\\))';var space='(?=\\s)';var language={heading:{pattern:/;;;.*/,alias:['comment','title']},comment:/;.*/,string:{pattern:/"(?:[^"\\]*|\\.)*"/,greedy:true,inside:{argument:/[-A-Z]+(?=[.,\s])/,symbol:new RegExp('`'+symbol+"'")}},'quoted-symbol':{pattern:new RegExp("#?'"+symbol),alias:['variable','symbol']},'lisp-property':{pattern:new RegExp(':'+symbol),alias:'property'},splice:{pattern:new RegExp(',@?'+symbol),alias:['symbol','variable']},keyword:[{pattern:new RegExp(par+
'(?:(?:lexical-)?let\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)'+
space),lookbehind:true},{pattern:new RegExp(par+'(?:for|do|collect|return|finally|append|concat|in|by)'+space),lookbehind:true},],declare:{pattern:simple_form('declare'),lookbehind:true,alias:'keyword'},interactive:{pattern:simple_form('interactive'),lookbehind:true,alias:'keyword'},boolean:{pattern:primitive('(?:t|nil)'),lookbehind:true},number:{pattern:primitive('[-+]?\\d+(?:\\.\\d*)?'),lookbehind:true},defvar:{pattern:new RegExp(par+'def(?:var|const|custom|group)\\s+'+symbol),lookbehind:true,inside:{keyword:/^def[a-z]+/,variable:new RegExp(symbol)}},defun:{pattern:new RegExp(par+
'(?:cl-)?(?:defun\\*?|defmacro)\\s+'+
symbol+
'\\s+\\([\\s\\S]*?\\)'),lookbehind:true,inside:{keyword:/^(?:cl-)?def\S+/,arguments:null,function:{pattern:new RegExp('(^\\s)'+symbol),lookbehind:true},punctuation:/[()]/}},lambda:{pattern:new RegExp(par+'lambda\\s+\\((?:&?'+symbol+'\\s*)*\\)'),lookbehind:true,inside:{keyword:/^lambda/,arguments:null,punctuation:/[()]/}},car:{pattern:new RegExp(par+symbol),lookbehind:true},punctuation:[/(['`,]?\(|[)\[\]])/,{pattern:/(\s)\.(?=\s)/,lookbehind:true},]};var arg={'lisp-marker':new RegExp(marker),rest:{argument:{pattern:new RegExp(symbol),alias:'variable'},varform:{pattern:new RegExp(par+symbol+'\\s+\\S[\\s\\S]*'+endpar),lookbehind:true,inside:{string:language.string,boolean:language.boolean,number:language.number,symbol:language.symbol,punctuation:/[()]/}}}};var forms='\\S+(?:\\s+\\S+)*';var arglist={pattern:new RegExp(par+'[\\s\\S]*'+endpar),lookbehind:true,inside:{'rest-vars':{pattern:new RegExp('&(?:rest|body)\\s+'+forms),inside:arg},'other-marker-vars':{pattern:new RegExp('&(?:optional|aux)\\s+'+forms),inside:arg},keys:{pattern:new RegExp('&key\\s+'+forms+'(?:\\s+&allow-other-keys)?'),inside:arg},argument:{pattern:new RegExp(symbol),alias:'variable'},punctuation:/[()]/}};language['lambda'].inside.arguments=arglist;language['defun'].inside.arguments=Prism.util.clone(arglist);language['defun'].inside.arguments.inside.sublist=arglist;Prism.languages.lisp=language;Prism.languages.elisp=language;Prism.languages.emacs=language;Prism.languages['emacs-lisp']=language;}(Prism));Prism.languages.lua={'comment':/^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,'string':{pattern:/(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[\s\S]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,greedy:true},'number':/\b0x[a-f\d]+\.?[a-f\d]*(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|\.?\d*(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,'keyword':/\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,'function':/(?!\d)\w+(?=\s*(?:[({]))/,'operator':[/[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,{pattern:/(^|[^.])\.\.(?!\.)/,lookbehind:true}],'punctuation':/[\[\](){},;]|\.+|:+/};Prism.languages.nginx=Prism.languages.extend('clike',{'comment':{pattern:/(^|[^"{\\])#.*/,lookbehind:true},'keyword':/\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\b/i});Prism.languages.insertBefore('nginx','keyword',{'variable':/\$[a-z_]+/i});Prism.languages.ocaml={'comment':/\(\*[\s\S]*?\*\)/,'string':[{pattern:/"(?:\\.|[^\\\r\n"])*"/,greedy:true},{pattern:/(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,greedy:true}],'number':/\b(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*\.?[\d_]*(?:e[+-]?[\d_]+)?)/i,'type':{pattern:/\B['`]\w*/,alias:'variable'},'directive':{pattern:/\B#\w+/,alias:'function'},'keyword':/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\b/,'boolean':/\b(?:false|true)\b/,'operator':/:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\b/,'punctuation':/[(){}\[\]|_.,:;]/};Prism.languages.pascal={'comment':[/\(\*[\s\S]+?\*\)/,/\{[\s\S]+?\}/,/\/\/.*/],'string':{pattern:/(?:'(?:''|[^'\r\n])*'|#[&$%]?[a-f\d]+)+|\^[a-z]/i,greedy:true},'keyword':[{pattern:/(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,lookbehind:true},{pattern:/(^|[^&])\b(?:dispose|exit|false|new|true)\b/i,lookbehind:true},{pattern:/(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,lookbehind:true},{pattern:/(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,lookbehind:true}],'number':[/(?:[&%]\d+|\$[a-f\d]+)/i,/\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i],'operator':[/\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/i,{pattern:/(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/,lookbehind:true}],'punctuation':/\(\.|\.\)|[()\[\]:;,.]/};Prism.languages.objectpascal=Prism.languages.pascal;Prism.languages.perl={'comment':[{pattern:/(^\s*)=\w+[\s\S]*?=cut.*/m,lookbehind:true},{pattern:/(^|[^\\$])#.*/,lookbehind:true}],'string':[{pattern:/\b(?:q|qq|qx|qw)\s*([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:true},{pattern:/\b(?:q|qq|qx|qw)\s+([a-zA-Z0-9])(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:true},{pattern:/\b(?:q|qq|qx|qw)\s*\((?:[^()\\]|\\[\s\S])*\)/,greedy:true},{pattern:/\b(?:q|qq|qx|qw)\s*\{(?:[^{}\\]|\\[\s\S])*\}/,greedy:true},{pattern:/\b(?:q|qq|qx|qw)\s*\[(?:[^[\]\\]|\\[\s\S])*\]/,greedy:true},{pattern:/\b(?:q|qq|qx|qw)\s*<(?:[^<>\\]|\\[\s\S])*>/,greedy:true},{pattern:/("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:true},{pattern:/'(?:[^'\\\r\n]|\\.)*'/,greedy:true}],'regex':[{pattern:/\b(?:m|qr)\s*([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1[msixpodualngc]*/,greedy:true},{pattern:/\b(?:m|qr)\s+([a-zA-Z0-9])(?:(?!\1)[^\\]|\\[\s\S])*\1[msixpodualngc]*/,greedy:true},{pattern:/\b(?:m|qr)\s*\((?:[^()\\]|\\[\s\S])*\)[msixpodualngc]*/,greedy:true},{pattern:/\b(?:m|qr)\s*\{(?:[^{}\\]|\\[\s\S])*\}[msixpodualngc]*/,greedy:true},{pattern:/\b(?:m|qr)\s*\[(?:[^[\]\\]|\\[\s\S])*\][msixpodualngc]*/,greedy:true},{pattern:/\b(?:m|qr)\s*<(?:[^<>\\]|\\[\s\S])*>[msixpodualngc]*/,greedy:true},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2[msixpodualngcer]*/,lookbehind:true,greedy:true},{pattern:/(^|[^-]\b)(?:s|tr|y)\s+([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2[msixpodualngcer]*/,lookbehind:true,greedy:true},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*\((?:[^()\\]|\\[\s\S])*\)\s*\((?:[^()\\]|\\[\s\S])*\)[msixpodualngcer]*/,lookbehind:true,greedy:true},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*\{(?:[^{}\\]|\\[\s\S])*\}\s*\{(?:[^{}\\]|\\[\s\S])*\}[msixpodualngcer]*/,lookbehind:true,greedy:true},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*\[(?:[^[\]\\]|\\[\s\S])*\]\s*\[(?:[^[\]\\]|\\[\s\S])*\][msixpodualngcer]*/,lookbehind:true,greedy:true},{pattern:/(^|[^-]\b)(?:s|tr|y)\s*<(?:[^<>\\]|\\[\s\S])*>\s*<(?:[^<>\\]|\\[\s\S])*>[msixpodualngcer]*/,lookbehind:true,greedy:true},{pattern:/\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\b))/,greedy:true}],'variable':[/[&*$@%]\{\^[A-Z]+\}/,/[&*$@%]\^[A-Z_]/,/[&*$@%]#?(?=\{)/,/[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+)+(?:::)*/i,/[&*$@%]\d+/,/(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/],'filehandle':{pattern:/<(?![<=])\S*>|\b_\b/,alias:'symbol'},'vstring':{pattern:/v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,alias:'string'},'function':{pattern:/sub [a-z0-9_]+/i,inside:{keyword:/sub/}},'keyword':/\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\b/,'number':/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\d(?:_?\d)*)?\.?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,'operator':/-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\b/,'punctuation':/[{}[\];(),:]/};Prism.languages.sql={'comment':{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:true},'string':{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\])*\2/,greedy:true,lookbehind:true},'variable':/@[\w.$]+|@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,'function':/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,'keyword':/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,'boolean':/\b(?:TRUE|FALSE|NULL)\b/i,'number':/\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,'operator':/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,'punctuation':/[;[\]()`,.]/};Prism.languages.protobuf=Prism.languages.extend('clike',{keyword:/\b(?:package|import|message|enum)\b/,builtin:/\b(?:required|repeated|optional|reserved)\b/,primitive:{pattern:/\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\b/,alias:'symbol'}});Prism.languages.python={'comment':{pattern:/(^|[^\\])#.*/,lookbehind:true},'triple-quoted-string':{pattern:/("""|''')[\s\S]+?\1/,greedy:true,alias:'string'},'string':{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:true},'function':{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:true},'class-name':{pattern:/(\bclass\s+)\w+/i,lookbehind:true},'keyword':/\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\b/,'builtin':/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,'boolean':/\b(?:True|False|None)\b/,'number':/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,'operator':/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:or|and|not)\b/,'punctuation':/[{}[\];(),.:]/};Prism.languages.q={'string':/"(?:\\.|[^"\\\r\n])*"/,'comment':[{pattern:/([\t )\]}])\/.*/,lookbehind:true,greedy:true},{pattern:/(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/,lookbehind:true,greedy:true},{pattern:/^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m,greedy:true},{pattern:/^#!.+/m,greedy:true}],'symbol':/`(?::\S+|[\w.]*)/,'datetime':{pattern:/0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,alias:'number'},'number':/\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\da-fA-F]+|\d+\.?\d*(?:e[+-]?\d+)?[hjfeb]?)/,'keyword':/\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,'adverb':{pattern:/['\/\\]:?|\beach\b/,alias:'function'},'verb':{pattern:/(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?_~=|$&#@^]):?/,alias:'operator'},'punctuation':/[(){}\[\];.]/};Prism.languages.r={'comment':/#.*/,'string':{pattern:/(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:true},'percent-operator':{pattern:/%[^%\s]*%/,alias:'operator'},'boolean':/\b(?:TRUE|FALSE)\b/,'ellipsis':/\.\.(?:\.|\d+)/,'number':[/\b(?:NaN|Inf)\b/,/(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+\.?\d*|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/],'keyword':/\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\b/,'operator':/->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,'punctuation':/[(){}\[\],;]/};Prism.languages.rust={'comment':[{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:true},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:true}],'string':[{pattern:/b?r(#*)"(?:\\.|(?!"\1)[^\\\r\n])*"\1/,greedy:true},{pattern:/b?"(?:\\.|[^\\\r\n"])*"/,greedy:true}],'char':{pattern:/b?'(?:\\(?:x[0-7][\da-fA-F]|u{(?:[\da-fA-F]_*){1,6}|.)|[^\\\r\n\t'])'/,alias:'string'},'lifetime-annotation':{pattern:/'[^\s>']+/,alias:'symbol'},'keyword':/\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\b/,'attribute':{pattern:/#!?\[.+?\]/,greedy:true,alias:'attr-name'},'function':[/\w+(?=\s*\()/,/\w+!(?=\s*\(|\[)/],'macro-rules':{pattern:/\w+!/,alias:'function'},'number':/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\d(?:_?\d)*)?\.?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\b/,'closure-params':{pattern:/\|[^|]*\|(?=\s*[{-])/,inside:{'punctuation':/[|:,]/,'operator':/[&*]/}},'punctuation':/[{}[\];(),:]|\.+|->/,'operator':/[-+*\/%!^]=?|=[=>]?|@|&[&=]?|\|[|=]?|<<?=?|>>?=?/};Prism.languages.scheme={'comment':/;.*/,'string':{pattern:/"(?:[^"\\\r\n]|\\.)*"|'[^('\s]*/,greedy:true},'keyword':{pattern:/(\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,lookbehind:true},'builtin':{pattern:/(\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\/cc|append|abs|apply|eval)\b|null\?|pair\?|boolean\?|eof-object\?|char\?|procedure\?|number\?|port\?|string\?|vector\?|symbol\?|bytevector\?)/,lookbehind:true},'number':{pattern:/(\s|[()])[-+]?\d*\.?\d+(?:\s*[-+]\s*\d*\.?\d+i)?\b/,lookbehind:true},'boolean':/#[tf]/,'operator':{pattern:/(\()(?:[-+*%\/]|[<>]=?|=>?)/,lookbehind:true},'function':{pattern:/(\()[^\s()]*(?=[\s)])/,lookbehind:true},'punctuation':/[()]/};Prism.languages.smalltalk={'comment':/"(?:""|[^"])+"/,'string':/'(?:''|[^'])+'/,'symbol':/#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,'block-arguments':{pattern:/(\[\s*):[^\[|]*\|/,lookbehind:true,inside:{'variable':/:[\da-z]+/i,'punctuation':/\|/}},'temporary-variables':{pattern:/\|[^|]+\|/,inside:{'variable':/[\da-z]+/i,'punctuation':/\|/}},'keyword':/\b(?:nil|true|false|self|super|new)\b/,'character':{pattern:/\$./,alias:'string'},'number':[/\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/,/\b\d+(?:\.\d+)?(?:e-?\d+)?/],'operator':/[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,'punctuation':/[.;:?\[\](){}]/};Prism.languages.yaml={'scalar':{pattern:/([\-:]\s*(?:![^\s]+)?[ \t]*[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)[^\r\n]+(?:\2[^\r\n]+)*)/,lookbehind:true,alias:'string'},'comment':/#.*/,'key':{pattern:/(\s*(?:^|[:\-,[{\r\n?])[ \t]*(?:![^\s]+)?[ \t]*)[^\r\n{[\]},#\s]+?(?=\s*:\s)/,lookbehind:true,alias:'atrule'},'directive':{pattern:/(^[ \t]*)%.+/m,lookbehind:true,alias:'important'},'datetime':{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?)?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?)(?=[ \t]*(?:$|,|]|}))/m,lookbehind:true,alias:'number'},'boolean':{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:true|false)[ \t]*(?=$|,|]|})/im,lookbehind:true,alias:'important'},'null':{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:null|~)[ \t]*(?=$|,|]|})/im,lookbehind:true,alias:'important'},'string':{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)("|')(?:(?!\2)[^\\\r\n]|\\.)*\2(?=[ \t]*(?:$|,|]|}))/m,lookbehind:true,greedy:true},'number':{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+\.?\d*|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)[ \t]*(?=$|,|]|})/im,lookbehind:true},'tag':/![^\s]+/,'important':/[&*][\w]+/,'punctuation':/---|[:[\]{}\-,|>?]|\.\.\./};(function(){if(typeof self==='undefined'||!self.Prism||!self.document){return;}
var PLUGIN_NAME='line-numbers';var NEW_LINE_EXP=/\n(?!$)/g;var _resizeElement=function(element){var codeStyles=getStyles(element);var whiteSpace=codeStyles['white-space'];if(whiteSpace==='pre-wrap'||whiteSpace==='pre-line'){var codeElement=element.querySelector('code');var lineNumbersWrapper=element.querySelector('.line-numbers-rows');var lineNumberSizer=element.querySelector('.line-numbers-sizer');var codeLines=codeElement.textContent.split(NEW_LINE_EXP);if(!lineNumberSizer){lineNumberSizer=document.createElement('span');lineNumberSizer.className='line-numbers-sizer';codeElement.appendChild(lineNumberSizer);}
lineNumberSizer.style.display='block';codeLines.forEach(function(line,lineNumber){lineNumberSizer.textContent=line||'\n';var lineSize=lineNumberSizer.getBoundingClientRect().height;lineNumbersWrapper.children[lineNumber].style.height=lineSize+'px';});lineNumberSizer.textContent='';lineNumberSizer.style.display='none';}};var getStyles=function(element){if(!element){return null;}
return window.getComputedStyle?getComputedStyle(element):(element.currentStyle||null);};window.addEventListener('resize',function(){Array.prototype.forEach.call(document.querySelectorAll('pre.'+PLUGIN_NAME),_resizeElement);});Prism.hooks.add('complete',function(env){if(!env.code){return;}
var pre=env.element.parentNode;var clsReg=/\s*\bline-numbers\b\s*/;if(!pre||!/pre/i.test(pre.nodeName)||(!clsReg.test(pre.className)&&!clsReg.test(env.element.className))){return;}
if(env.element.querySelector('.line-numbers-rows')){return;}
if(clsReg.test(env.element.className)){env.element.className=env.element.className.replace(clsReg,' ');}
if(!clsReg.test(pre.className)){pre.className+=' line-numbers';}
var match=env.code.match(NEW_LINE_EXP);var linesNum=match?match.length+1:1;var lineNumbersWrapper;var lines=new Array(linesNum+1);lines=lines.join('<span></span>');lineNumbersWrapper=document.createElement('span');lineNumbersWrapper.setAttribute('aria-hidden','true');lineNumbersWrapper.className='line-numbers-rows';lineNumbersWrapper.innerHTML=lines;if(pre.hasAttribute('data-start')){pre.style.counterReset='linenumber '+(parseInt(pre.getAttribute('data-start'),10)-1);}
env.element.appendChild(lineNumbersWrapper);_resizeElement(pre);Prism.hooks.run('line-numbers',env);});Prism.hooks.add('line-numbers',function(env){env.plugins=env.plugins||{};env.plugins.lineNumbers=true;});Prism.plugins.lineNumbers={getLine:function(element,number){if(element.tagName!=='PRE'||!element.classList.contains(PLUGIN_NAME)){return;}
var lineNumberRows=element.querySelector('.line-numbers-rows');var lineNumberStart=parseInt(element.getAttribute('data-start'),10)||1;var lineNumberEnd=lineNumberStart+(lineNumberRows.children.length-1);if(number<lineNumberStart){number=lineNumberStart;}
if(number>lineNumberEnd){number=lineNumberEnd;}
var lineIndex=number-lineNumberStart;return lineNumberRows.children[lineIndex];}};}());(function(){if(typeof self==='undefined'||!self.Prism||!self.document){return;}
var clsReg=/\s*\bcommand-line\b\s*/;Prism.hooks.add('before-highlight',function(env){env.vars=env.vars||{};env.vars['command-line']=env.vars['command-line']||{};if(env.vars['command-line'].complete||!env.code){env.vars['command-line'].complete=true;return;}
var pre=env.element.parentNode;if(!pre||!/pre/i.test(pre.nodeName)||(!clsReg.test(pre.className)&&!clsReg.test(env.element.className))){env.vars['command-line'].complete=true;return;}
if(env.element.querySelector('.command-line-prompt')){env.vars['command-line'].complete=true;return;}
var codeLines=env.code.split('\n');env.vars['command-line'].numberOfLines=codeLines.length;env.vars['command-line'].outputLines=[];var outputSections=pre.getAttribute('data-output');var outputFilter=pre.getAttribute('data-filter-output');if(outputSections||outputSections===''){outputSections=outputSections.split(',');for(var i=0;i<outputSections.length;i++){var range=outputSections[i].split('-');var outputStart=parseInt(range[0],10);var outputEnd=(range.length===2?parseInt(range[1],10):outputStart);if(!isNaN(outputStart)&&!isNaN(outputEnd)){if(outputStart<1){outputStart=1;}
if(outputEnd>codeLines.length){outputEnd=codeLines.length;}
outputStart--;outputEnd--;for(var j=outputStart;j<=outputEnd;j++){env.vars['command-line'].outputLines[j]=codeLines[j];codeLines[j]='';}}}}else if(outputFilter){for(var i=0;i<codeLines.length;i++){if(codeLines[i].indexOf(outputFilter)===0){env.vars['command-line'].outputLines[i]=codeLines[i].slice(outputFilter.length);codeLines[i]='';}}}
env.code=codeLines.join('\n');});Prism.hooks.add('before-insert',function(env){env.vars=env.vars||{};env.vars['command-line']=env.vars['command-line']||{};if(env.vars['command-line'].complete){return;}
var codeLines=env.highlightedCode.split('\n');for(var i=0;i<env.vars['command-line'].outputLines.length;i++){if(env.vars['command-line'].outputLines.hasOwnProperty(i)){codeLines[i]=env.vars['command-line'].outputLines[i];}}
env.highlightedCode=codeLines.join('\n');});Prism.hooks.add('complete',function(env){env.vars=env.vars||{};env.vars['command-line']=env.vars['command-line']||{};if(env.vars['command-line'].complete){return;}
var pre=env.element.parentNode;if(clsReg.test(env.element.className)){env.element.className=env.element.className.replace(clsReg,' ');}
if(!clsReg.test(pre.className)){pre.className+=' command-line';}
var getAttribute=function(key,defaultValue){return(pre.getAttribute(key)||defaultValue).replace(/"/g,'&quot');};var promptLines=new Array(env.vars['command-line'].numberOfLines+1);var promptText=getAttribute('data-prompt','');if(promptText!==''){promptLines=promptLines.join('<span data-prompt="'+promptText+'"></span>');}else{var user=getAttribute('data-user','user');var host=getAttribute('data-host','localhost');promptLines=promptLines.join('<span data-user="'+user+'" data-host="'+host+'"></span>');}
var prompt=document.createElement('span');prompt.className='command-line-prompt';prompt.innerHTML=promptLines;for(var i=0;i<env.vars['command-line'].outputLines.length;i++){if(env.vars['command-line'].outputLines.hasOwnProperty(i)){var node=prompt.children[i];node.removeAttribute('data-user');node.removeAttribute('data-host');node.removeAttribute('data-prompt');}}
env.element.insertBefore(prompt,env.element.firstChild);env.vars['command-line'].complete=true;});}());